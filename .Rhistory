mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(sampling_dist2)
ggplot(sampling_dist2, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 100",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
mean(sampling_dist2$p_hat)
sd(sampling_dist2$p_hat)
pHat
SE <- sd(simulated_sampling_distr$p_hat)
SE
CI <- pHat + c(-1,1)*2*SE
CI
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
# generates results from 5000 binomial experiments w/ probability of
# success = .1 and sample size of n = 2044, returns sample proportion.
null_dist <- tibble(p_hat = rbinom(5000, 2044, .1)/2044)
# center of distribution
mean(null_dist$p_hat)
# standard error
SE <- sd(null_dist$p_hat)
SE
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
geom_vline(xintercept = pHat, color = "red") +
labs(title = "Null distribution with p = .1 and n = 2044, pHat = .149",
x = "Sample proportion, p-hat")
# count the number of simulated samples with proportions at least as large as
# our actual sample proportion, divide by number of samples in simulated dist.
pValue <- sum(null_dist$p_hat >= pHat ) / length(null_dist$p_hat)
pValue
ggplot(data.frame(x = c(-3,3)), aes(x = x)) +
stat_function(fun = dnorm,
geom = "line") +
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(-1.96, 1.96))+
labs(title = "What bounds give us a central area of .95?",
x = "Z", y = "")
qnorm(.025, lower.tail = FALSE)
cvTable <- tibble( conf.level = c(.9, .95, .98, .99),
crit.val = qnorm( (1 - conf.level)/2, lower.tail =F))
cvTable
# components of CI
pHat <- sum( gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
SE <- sqrt(pHat*(1-pHat)/length(gss2010$degree))
zCrit <- qnorm( (1 - .95)/2, lower.tail = FALSE)
# CI
pHat + c(-1,1)*zCrit*SE
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- 2*pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE)
pVal
n <- length(gss2010$degree)
n
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL")/n
pHat
pNull <- .1
# will return a logical, T/F
n*pNull >= 10
n*(1 - pNull) >= 10
SE <- sqrt(pNull*(1- pNull)/n)
pValue <- pnorm(pHat, mean = pNull, sd = SE, lower.tail = F)
pValue
slice_sample(cancer_in_dogs, n = 4)
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab %>% kable()
n1 <- sum(sumTab[,1])
n2 <- sum(sumTab[,2])
pHat1 <- sumTab[1,1] / n1
pHat2 <- sumTab[1,2] / n2
c(pHat1, pHat2)
pDiff <- pHat1 - pHat2
pDiff
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
SE
zCrit <- qnorm( (1-.95)/2, lower.tail = F)
ciDiff <- pDiff + c(-1, 1)*zCrit*SE
ciDiff
sumTab %>% kable()
pPool <- sum(sumTab[1,])/sum(sumTab)
pPool <- sum(sumTab[1,])/sum(sumTab)
pPool
c( n1*pPool, n1*(1-pPool))
c( n2*pPool, n2*(1-pPool))
SE <- sqrt( pPool*(1-pPool)/n1 + pPool*(1-pPool)/n2)
SE
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
SE
SE <- sqrt( pPool*(1-pPool)/n1 + pPool*(1-pPool)/n2)
SE
pDiff <- pHat1 - pHat2
pHat1 <- sumTab[1,1] / n1
pHat2 <- sumTab[1,2] / n2
pDiff <- pHat1 - pHat2
pDiff
Z <- pDiff / SE
Z
pVal <- 2*pnorm(Z,lower.tail = FALSE)
pVal
bookdown::render_book()
popular <- matrix( data = c( 63, 31, 25, 88, 55, 33, 96, 55, 32),
ncol = 3,
nrow = 3,
byrow = TRUE )
popular
expected <- matrix( rep(0, 9), nrow = 3, ncol = 3)
for(i in 1:3){
for(j in 1:3){
expected[i,j] <- sum(popular[i,])*sum(popular[,j])/sum(popular)
}
}
expected
popular
(popular - expected)^2/expected
test_stat <- sum((popular - expected)^2/expected)
test_stat
pchisq(test_stat, df = (3-1)*(3-1), lower.tail = F)
test_results <- chisq.test(x = popular,
correct = F)
test_results$statistic
summary(test_results)
test_results
test_results$observed
test_results$expected
test_results$expected - expected
library(openintro)
cancer_in_dogs
cars93
table(cars93$type, cars93$drive_train)
carSummary <- table(cars93$type, cars93$drive_train)
chisq.test(carSummary,
correct = F)
carSummary
?cancer_in_dogs
dogSum <- table(cancer_in_dogs$order, cancer_in_dogs$response)
dogSum
prop.table(dogSum)
191/sum(dogSum[1,])
300/941
chisq.test(dogSum, correct = FALSE)
qchisq(.05, df = 4, lower.tail = F)
library(openintro)
head(sp500_seq)
table(sp500_seq$race)
library(openintro)
library(tidyverse)
glimpse(smoking)
?smoking
table(smoking$marital_status, smoking$smoke)
table(smoking$smoke, smoking$marital_status)
library(tidyverse)
?geom_function
ggplot(tibble(x = c(0, 10)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5))
ggplot(tibble(x = c(0, 10)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
geom_function(fun = dchisq,
args = list(df = 5),
geom = "fill",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "fill",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
geom_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18))
?labs
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18),
color = "steelblue") +
labs( x = "chi-squared", y = "",
title = "Chi-squared distribution with df = 5",
subtitle = "p-value for chi-squared = 6.2 shaded")
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18),
fill = "steelblue") +
labs( x = "chi-squared", y = "",
title = "Chi-squared distribution with df = 5",
subtitle = "p-value for chi-squared = 6.2 shaded")
spTable <- table(sp500_seq$race)
library(openintro)
spTable <- table(sp500_seq$race)
spTable
?sp500_seq
?sp500
sp500 %>% view()
sp500_1950_2018 %>% view()
sp500_1950_2018 %>%
filter( date >= '1990-01-10' & date >= '2011-12-31') %>% view()
sp500_1950_2018 %>%
filter( Date >= '1990-01-10' & Date >= '2011-12-31') %>% view()
glimpse(sp500_1950_2018)
sp500_1950_2018 %>%
filter( Date >= '1990-01-10' & Date <= '2011-12-31') %>% view()
sp500_1950_2018 %>%
filter( Date >= '1990' & Date <= '2012') %>% view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>% view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE))
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%x
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
summarize( upProp = sum(dir)/length(dir))
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' &
as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
summarize( upProb = sum(dir)/length(dir))
probs <- dgeom(0:5,.531)
probs
probs <- c( dgeom(0:5,.531), pgeom(5, .351))
sum(probs)
probs <- c( dgeom(0:5,.531), pgeom(5, .351, lower.tail = F))
sum(probs)
probs <- c( dgeom(0:5,.531), pgeom(5, .531, lower.tail = F))
probs
sum(probs)
sum(spTable)
# expected counts
expected <- n*probs
expected
t( tibble(days, probs, expected))) %>% kable()
t( tibble(days, probs, expected)) %>% kable()
library(knitr)
t( tibble(days, probs, expected)) %>% kable()
#list of factors
days <- c(1:6, "7+")
# total number of up-to-up runs
n <-sum(spTable)
#list of factors
days <- c(1:6, "7+")
#probability/proportion of each factor level
probs <- c( dgeom(0:5,.531), pgeom(5, .531, lower.tail = F))
# expected counts
expected <- n*probs
expected
t( tibble(days, probs, expected)) %>% kable()
# display all of the above in a horizontally organized table
t( tibble(days, round(probs, 3), round(expected, 3))) %>% kable()
# display all of the above in a horizontally organized table
t( tibble(days, probs = round(probs, 3), expected = round(expected, 3))) %>% kable()
spTable
spTable[,2]
spTable[2,]
dim(spTable)
spTable - expected
(spTable - expected)^2/expected
# each individual squared z-score
(spTable - expected)^2/expected
# test stat
chi.sq <- sum((spTable - expected)^2/expected)
chi.sq
pchisq(chi.sq, df = 6, lower.tail = FALSE)
# each individual squared z-score
(spTable - expected)^2/expected
# test stat
chi.sq <- sum((spTable - expected)^2/expected)
chi.sq
(spTable - expected)^2/expected
(spTable - expected)
(spTable - expected)/sqrt(expected)
(spTable - expected)/sqrt(expected)
(spTable - expected)/sqrt(expected)
spTable/sum(spTable)
probs
bookdown::render_book()
ggplot(bf, aes(x = k, y = prob)) +
geom_point(color = "black")
library(tidyverse)
ggplot(bf, aes(x = k, y = prob)) +
geom_point(color = "black")
glimpse(mtcars)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
p <- ggplot(data = mtcars, aes(x = disp, y = mpg)) +
geom_point()
p
library(openintro)
library(tidyverse)
view(pop_age_2019)
view(age_at_mar)
prius_mpg
data()
glimpse(faithful)
?faithful
hist(faithful$eruptions)
hist(faithful$waiting)
mean(faithful$waiting)
sd(faithful$waiting)
sleep
?sleep
?women
women
hist(women$height)
mean(women$height)
summary(women$height)
sd(women$height)
(summary(women$height) - mean(women$height))/sd(women$height)
ggplot(faithful, aes(x = waiting)) +
geom_histogram(color = "black"
, fill = "steelblue")
ggplot(faithful, aes(x = waiting)) +
geom_histogram(color = "black"
, fill = "steelblue")
ggplot(faithful, aes(x = waiting)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 20)
ggplot(faithful, aes(x = waiting)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 20) +
labs( title = "Wait time between Yellowstone eruptions"
, subtitle = "n = 272")
summary(faithful$waiting)
fivenum(faithful$waiting)
summary(faithful$waiting)
(summary(faithful$waiting) - mean(faithful$waiting))/sd(faithful$waiting)
?faithful
library(MASS)
?geyser
ggplot(women, aes(x = height)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 20) +
labs( title = "Height of American women in 1975"
, subtitle = "n = 15")
ggplot(women, aes(x = height)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 10) +
labs( title = "Height of American women in 1975"
, subtitle = "n = 15")
ggplot(women, aes(x = height)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 7) +
labs( title = "Height of American women in 1975"
, subtitle = "n = 15")
ggplot(women, aes(x = height)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 5) +
labs( title = "Height of American women in 1975"
, subtitle = "n = 15")
ggplot(women, aes(x = height)) +
geom_histogram(color = "black"
, fill = "steelblue"
, bins = 7) +
labs( title = "Height of American women in 1975"
, subtitle = "n = 15")
(summary(women$height) - mean(women$height))/sd(women$height)
bookdown::render_book()

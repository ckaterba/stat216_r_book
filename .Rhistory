xlim = c(155, 180),
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black")
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(155, 180),
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density"
title = "Height of active men, P(H <= 180")
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(155, 180),
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H <= 180")
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(155, 180),
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H <= 180)")
pnorm(180, mean = m, sd = s)
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(175, 200),  #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H >= 175)")
The exact probablity can be calculated as
pnorm(175, mean = m, sd = s, lower.tail = FALSE)
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(155, 185), #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H <= 185)")
pnorm(185, mean = m, sd = s)
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(165, 175),  #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(165 <= H <= 175)")
pnorm(175, mean = m, sd = s) - pnorm(165, mean = m, sd = s)
qnorm(.8, mean = m, sd = 1)
pnorm(178.587, mean = m, sd = s)
qnorm(.8, mean = m, sd = s)
pnorm(183.7912, mean = m, sd = s)
bookdown::render_book()
1/6
bookdown::render_book()
library(openintro)
openintro::burger
library(openintro)
view(gss2010)
library(tidyverse)
view(gss2010)
?gss2010
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
?
slice_sample()
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2)
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
pHat2
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n))
head(simulated_sampling_distr)
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n))
head(simulated_sampling_distr)
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree = "LT HIGH SCHOOL")
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram()
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram()
?labs
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram(bins = 8, color = "black", fill = "steelblue") +
labs(main = "Distribution of sample proportions",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
10/.15
sampling_dist2 <- gss2010 %>%
rep_sample_n(size = 100, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
sampling_dist2 <- gss2010 %>%
rep_sample_n(size = 100, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(sampling_dist2)
mean(sampling_dist2$p_hat)
sd(sampling_dist2$p_hat)
sd(simulated_sampling_distr$p_hat)
bookdown::render_book()
2*pnorm(.41, mean = .5, sd = sqrt(.5*.5/850))
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
pHat2
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 2044",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
pHat2
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 2044",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
#average sample proportion
mean(simulated_sampling_distr$p_hat)
sd(simulated_sampling_distr$p_hat)
sampling_dist2 <- gss2010 %>%
rep_sample_n(size = 100, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(sampling_dist2)
ggplot(sampling_dist2, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 100",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
mean(sampling_dist2$p_hat)
sd(sampling_dist2$p_hat)
CI <- pHat + c(-1,1)*2*SE
pHat
SE <- sd(simulated_sampling_distr$p_hat)
SE
CI <- pHat + c(-1,1)*2*SE
CI
ggplot(data.frame(x = c(.4,6)), aes(x = x)) +
stat_function(fun = dnorm, geom = "line") +
stat_function(fun = dnorm,
args = c(mean = .5, sd = sqrt(.5*.5/200)),
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(.5, .6))
ggplot(data.frame(x = c(.4,6)), aes(x = x)) +
stat_function(fun = dnorm, geom = "line") +
stat_function(fun = dnorm,
args = c(mean = .5, sd = sqrt(.5*.5/200)),
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(.5, .6))
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm, geom = "line") +
stat_function(fun = dnorm,
args = c(mean = .5, sd = sqrt(.5*.5/200)),
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(.5, .6))
args <- c(mean = .5, sd = sqrt(.5*.5/200))
args <- c(mean = .5, sd = sqrt(.5*.5/200))
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.5, .6))
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6))
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
dim(gss2010)
null_dist <- rbinom(5000, 2044, .1)/2044
null_dist[1]
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
pHat2
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 2044",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
#average sample proportion
mean(simulated_sampling_distr$p_hat)
sd(simulated_sampling_distr$p_hat)
sampling_dist2 <- gss2010 %>%
rep_sample_n(size = 100, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(sampling_dist2)
ggplot(sampling_dist2, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 100",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
mean(sampling_dist2$p_hat)
sd(sampling_dist2$p_hat)
pHat
SE <- sd(simulated_sampling_distr$p_hat)
SE
CI <- pHat + c(-1,1)*2*SE
CI
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
# generates results from 5000 binomial experiments w/ probability of
# success = .1 and sample size of n = 2044, returns sample proportion.
null_dist <- tibble(p_hat = rbinom(5000, 2044, .1)/2044)
#mean(null_dist$p_)
mean(null_dist$p_hat)
function (x, ...)
# center of distribution
mean(null_dist$p_hat)
# standard error
SE <- sd(null_dist$p_hat)
# center of distribution
mean(null_dist$p_hat)
# standard error
SE <- sd(null_dist$p_hat)
SE
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Null distribution with p = .1 and n = 2044",
x = "Sample proportion, p-hat")
?vline
?geom_vline
pHat
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
geom_vline(xintercept = pHat, color = "red")
labs(title = "Null distribution with p = .1 and n = 2044, pHat .149",
x = "Sample proportion, p-hat")
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
geom_vline(xintercept = pHat, color = "red") +
labs(title = "Null distribution with p = .1 and n = 2044, pHat .149",
x = "Sample proportion, p-hat")
sum( null_dist$p_hat > pHat )
# count the number of simulated samples with proportions at least as large as
# our actual sample proportion, divide by number of samples in simulated dist.
pValue <- sum(null_dist$p_hat >= pHat ) / length(null_dist$p_hat)
pValue
bookdown::render_book()

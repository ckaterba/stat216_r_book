hist(teacher$base, #variable to make a histogram of
breaks = 11, #number of cells, can be left blank
freq = TRUE, #displays frequency on y-axis, if false displays rel. freq.
main = "Histogram of Teacher Base Salary", #sets main title
xlab = "Base salary (USD)", #x-axis label
ylab = "Frequency" #y-axis label, can be left blank in this case
)
#no options specified
hist(teacher$base)
#vs many options specified
hist(teacher$base, #variable to make a histogram of
breaks = 11, #number of cells, can be left blank
freq = FALSE, #displays relative frequency on y-axis, if true, displays frequency
main = "Histogram of Teacher Base Salary", #sets main title
xlab = "Base salary (USD)", #x-axis label
ylab = "Frequency" #y-axis label, can be left blank in this case
)
plot(teacher$base, teacher$retirement)
plot(teacher$base, teacher$total)
plot(teacher$years, teacher$total)
?plot
?teacher
?plot
#basic plot of years experience vs total teacher salary
plot(teacher$years, teacher$total)
#same plot with updated options
plot( teacher$years, teacher$total,
main = "Teacher experience vs total salary",
sub = "St. Louis Schools, Michigan 2009-2010",
xlab = "Teaching experience (in years)",
ylab = "Total annual salary (USD)")
#basic plot of years experience vs total teacher salary
plot(teacher$years, teacher$total)
#same plot with updated options
plot( teacher$years, teacher$total,
main = "Teacher experience vs total salary",
xlab = "Teaching experience (in years)",
ylab = "Total annual salary (USD)")
#basic plot of years experience vs total teacher salary
plot(teacher$years, teacher$total)
#same plot with updated options
plot( teacher$years, teacher$total,
pch = 3, #
main = "Teacher experience vs total salary",
xlab = "Teaching experience (in years)",
ylab = "Total annual salary (USD)")
#basic plot of years experience vs total teacher salary
plot(teacher$years, teacher$total)
#same plot with updated options
plot( teacher$years, teacher$total,
pch = 16, #
main = "Teacher experience vs total salary",
xlab = "Teaching experience (in years)",
ylab = "Total annual salary (USD)")
barplot(teacher$degree)
tbl1 <- table(teacher$degree)
barplot(tbl1)
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte )
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte, data = teachers )
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte, data = teacher )
barplot(tbl1,)
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte, data = teacher )
barplot(tbl1)
barplot(tbl2)
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte, data = teacher )
barplot(tbl1)
barplot(tbl2, legend = rownames(counts))
tbl2 <- xtabs(~degree + fte, data = teacher )
barplot(tbl2, legend = rownames(counts))
tbl1 <- table(teacher$degree)
tbl2 <- xtabs(~degree + fte, data = teacher )
barplot(tbl1)
barplot(tbl2, legend = rownames(tbl2))
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1, )
barplot(tbl2, legend = rownames(tbl2))
?barplot
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way rel. freq. table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1,
main = "Relative frequency of teacher degrees",
xlab = "degree")
barplot(tbl2, legend = rownames(tbl2))
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way rel. freq. table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1,
main = "Relative frequency of teacher degrees",
xlab = "Degree",
ylab = "Proportion")
barplot(tbl2, legend = rownames(tbl2))
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way rel. freq. table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1,
main = "Relative frequency of teacher degrees",
xlab = "Degree",
ylab = "Proportion")
#visualize two-way table
barplot(tbl2,
main = "Teacher status employment by degree",
xlab = "Employment (by FTE)",
ylab = "Frequency",
legend = rownames(tbl2)
)
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way rel. freq. table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1,
main = "Relative frequency of teacher degrees",
xlab = "Degree",
ylab = "Proportion")
#visualize two-way table
barplot(tbl2,
main = "Teacher status employment by degree",
xlab = "Employment (by FTE)",
ylab = "Frequency",
legend = rownames(tbl2),
colors = c("red", "blue")
)
#define our tables
tbl1 <- prop.table(table(teacher$degree)) # one-way rel. freq. table
tbl2 <- xtabs(~degree + fte, data = teacher ) #two-way table
#visualize one-way table
barplot(tbl1,
main = "Relative frequency of teacher degrees",
xlab = "Degree",
ylab = "Proportion")
#visualize two-way table
barplot(tbl2,
main = "Teacher status employment by degree",
xlab = "Employment (by FTE)",
ylab = "Frequency",
legend = rownames(tbl2),
col = c("red", "blue")
)
bookdown::render_book()
bookdown::render_book()
?boxplot
library(tidyverse)
library(openintro)
?boxplot
view(teacher)
boxplot(base, data = teacher)
boxplot(~base, data = teacher)
boxplot(teacher$base)
boxplot(teacher$base,
ylab = "Base salary (USD)",
main = "Distribution of MI teacher salaries")
boxplot(base ~ degree, data = teacher,
xlab = "Degree",
ylab = "Base salary (USD)",
main = "MI teacher base salary by degree")
by(fullTime$base, fullTime$degree, mean)
library(tidyverse)
library(openintro)
head(teacher)
mean(teacher$base)
median(teacher$base)
var(teacher$base)
sd(teacher$base)
quantile(teacher$base, probs = .25) #first quartile
quantile(teacher$base, probs = .75) #third quartile
quantile(teacher$base, probs = c(.25, .5, .75)) #Q1, median, Q3
IQR(teacher$base)
quantile(teacher$base, .75) - quantile(teacher$base, .25)
min(teacher$base)
max(teacher$base)
summary(teacher$base)
fivenum(teacher$base)
unique(teacher$degree) #unique values this variable takes on
summary(teacher$degree) #count the number of occurences of each value
#generates a one-way table
table(teacher$degree)
#generates a two-way table
table(teacher$degree, teacher$fte)
#one-way table
xtabs(~degree, data = teacher)
#two-way table
xtabs(~degree + fte, data = teacher)
#define one-way table, convert to proportion table
tbl1 <- table(teacher$degree)
prop.table(tbl1)
#define two-way table, convert to proportion table
tbl2 <- xtabs(~degree  + fte, data = teacher)
prop.table(tbl2)
#subset for only full time teachers
fullTime <- subset(teacher, fte == "1")
#subset by degree
bach <- subset(fullTime, degree == "BA")
mast <- subset(fullTime, degree == "MA")
#finally calculate averages
mean(bach$base)
mean(mast$base)
by(fullTime$base, fullTime$degree, mean)
boxplot(base ~ degree, data = fullTime,
xlab = "Degree",
ylab = "Base salary (USD)",
main = "MI teacher base salary by degree")
?savePlot
boxplot(base ~ degree, data = fullTime,
xlab = "Degree",
ylab = "Base salary (USD)",
main = "MI teacher base salary by degree")
21+26
?aes
?geom
?geom_point
?geom_hist
?geom_histogram
ggplot(teacher, aes(x = base)) +
geom_histogram()
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15)
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 10)
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15)
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, color = "steelblue")
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, fill = "steelblue")
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, fill = "steelblue", color = "black")
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, fill = "steelblue", color = "black") +
labs( title = "Distribution of MI teacher base salary")
?labs
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, fill = "steelblue", color = "black") +
labs( title = "Distribution of MI teacher base salary",
xlab = "Base salary (USD)",
ylab = "Count")
ggplot(teacher, aes(x = base)) +
geom_histogram(bins = 15, fill = "steelblue", color = "black") +
labs( title = "Distribution of MI teacher base salary") +
xlab("Base salary (USD)")
# open empty plot
ggplot(teacher, aes(x = base)) +
# add histogram layer with 15 bins. fill changes bar color, but color changes outline color
geom_histogram(bins = 15, fill = "steelblue", color = "black") +
# adds label layer with only a title. can add subtitle and caption.
labs( title = "Distribution of MI teacher base salary") +
# changes x-axis label
xlab("Base salary (USD)")
?geom_point
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "red")
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "rust")
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "orange", alpha = .5)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5m, shape = 1)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5, shape = 1)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5, shape = 2)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5, shape = 3)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5, shape = 3)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5, shape = 5)
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5) +
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .75) +
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5) +
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point() +
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(shape = factor(fte)) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = factor(fte)) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = factor(fte))) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = fte)) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = fte)) +
geom_smooth(method = 'lm', se = F) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue") +
geom_smooth( method = 'lm', se = FALSE) + #adds line of best fit without error bars
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total))  +
geom_point() +
geom_smooth( method = 'lm', se = FALSE) + #adds line of best fit without error bars
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = fte)) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = fte)) +
geom_smooth(method = 'lm', formula = y~x, se = FALSE) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
box multiple factor levels, violin
ggplot(teacher, aes(x = years, y = total, color = degree))  +
geom_point(aes(shape = fte)) +
geom_smooth(method = 'lm', formula = y~x, se = FALSE) +
labs(title = "Teacher salary vs years experience, by highest degree") +
xlab("Experience (years)") +
ylab("Total salary (USD)")
ggplot(teacher, aes(x = degree)) +
geom_boxplot()
ggplot(teacher, aes(x = degree)) +
geom_bar()
ggplot(teacher, aes(x = degree, color = fte)) +
geom_bar()
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar()
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes (y = ..prop..))
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes (y = ..prop.., group = 1))
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes (y = ..prop.., group = 2))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., group = 2))
ggplot(teacher, aes(x = degree, y = ..prop..)) +
geom_bar()
ggplot(teacher, aes(x = degree, y = ..prop.., group = 2)) +
geom_bar()
ggplot(teacher, aes(x = degree, y = ..prop.., group = 1)) +
geom_bar()
# first load a package for side by side plots
library(gridExtra)
# Frequency bar plot
ggplot(teacher, aes(x = degree)) +
geom_bar(fill = "aquamarine3", color = "black")
# first load a package for side by side plots
library(gridExtra)
# Frequency bar plot
p1 <- ggplot(teacher, aes(x = degree)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher educational attainment")
# relative frequency bar plot
p2 <- ggplot(teacher, aes(x = degree, y = ..prop..)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher educational attainment")
grid.arrange(p1,p2, ncol = 2)
# first load a package for side by side plots
library(gridExtra)
# Frequency bar plot
p1 <- ggplot(teacher, aes(x = degree)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher educational attainment")
# relative frequency bar plot
p2 <- ggplot(teacher, aes(x = degree, y = ..prop.., group =1)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher educational attainment")
grid.arrange(p1,p2, ncol = 2)
# first load a package for side by side plots
library(gridExtra)
# Frequency bar plot
p1 <- ggplot(teacher, aes(x = degree)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher education (count)")
# relative frequency bar plot
p2 <- ggplot(teacher, aes(x = degree, y = ..prop.., group =1)) +
geom_bar(fill = "aquamarine3", color = "black") +
labs( title = "MI teacher education (proportion)")
grid.arrange(p1,p2, ncol = 2)
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(position = position_dodge(), color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes(y = ..prop..), position = position_dodge(), color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes(y = ..prop.., group =1 ), position = position_dodge(), color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes(y = ..prop.., group =2 ), position = position_dodge(), color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(aes(y = ..prop.., group = 3 ), position = position_dodge(), color = "black")
#stacked
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar( position = position_dodge(), color = "black")
#stacked
p1 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black")
#side by side
p2 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar( position = position_dodge(), color = "black")
grid.arrange(p1, p2, ncol = 2)
#stacked
p1 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black") +
lab(title = "MI teacher education")
#stacked
p1 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black") +
labs(title = "MI teacher education")
#side by side
p2 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar( position = position_dodge(), color = "black")+
lab(title = "MI teacher education")
#stacked
p1 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar(color = "black") +
labs(title = "MI teacher education")
#side by side
p2 <- ggplot(teacher, aes(x = degree, fill = fte)) +
geom_bar( position = position_dodge(), color = "black")+
labs(title = "MI teacher education")
grid.arrange(p1, p2, ncol = 2)
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = 1))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = fte))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = degree))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = interaction(degree, fte)))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = degree))
ggplot(teacher, aes(x = degree)) +
geom_bar(aes (y = ..prop.., fill = fte, group = fte))
#open empty plot and specify explanatory (x) and response (y) variables
ggplot(teacher, aes(x = years, y = total))  +
geom_point(color = "steelblue", alpha = .5) +
labs(title = "Teacher salary vs years experience") +
xlab("Experience (years)") +
ylab("Total salary (USD)")

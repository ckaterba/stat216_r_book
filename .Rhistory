geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
# generates results from 5000 binomial experiments w/ probability of
# success = .1 and sample size of n = 2044, returns sample proportion.
null_dist <- tibble(p_hat = rbinom(5000, 2044, .1)/2044)
# center of distribution
mean(null_dist$p_hat)
# standard error
SE <- sd(null_dist$p_hat)
SE
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
geom_vline(xintercept = pHat, color = "red") +
labs(title = "Null distribution with p = .1 and n = 2044, pHat .149",
x = "Sample proportion, p-hat")
# count the number of simulated samples with proportions at least as large as
# our actual sample proportion, divide by number of samples in simulated dist.
pValue <- sum(null_dist$p_hat >= pHat ) / length(null_dist$p_hat)
pValue
ggplot(data.frame(x = c(-3,3)), aes(x = x)) +
stat_function(fun = dnorm,
geom = "line") +
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(-1.96, 1.96))+
labs(title = "What bounds give us a central area of .95")
ggplot(data.frame(x = c(-3,3)), aes(x = x)) +
stat_function(fun = dnorm,
geom = "line") +
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(-1.96, 1.96))+
labs(title = "What bounds give us a central area of .95?",
x = "Z", y = "")
qnorm(.025, lower.tail = FALSE)
cvTable <- tibble( conf.level = c(.9, .95, .98, .99),
crit.val = qnorm( (1 - conf.level)/2, lower.tail =F))
cvTable
# components of CI
pHat <- sum( gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
SE <- sqrt(pHat*(1-pHat)/length(gss2010$degree))
zCrit <- qnorm( (1 - .95)/2, lower.tail = FALSE)
# CI
pHat + c(-1,1)*zCrit*SE
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- 2*pnorm(.55, mean = pNull, sd = SE)
pVal
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- 2*pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE)
pVal
bookdown::render_book()
pNull <- .1
# will return a logical, T/F
n*pNull >= 10
pNull <- .1
# will return a logical, T/F
n*pNull >= 10
n <- length(gss2010$degree)
n
# will return a logical, T/F
n*pNull >= 10
n*(1 - pNull) >= 10
SE <- sqrt(pNull*(1- pNull)/n)
pValue <- pnorm(pHat, mean = pNull, sd = SE, lower.tail = F)
pValue
prop.test(x= 334,
n = 1005,
alternative = "two.sided",
conf.level = .95,
correct = FALSE)
test1 <- prop.test(x= 334,
n = 1005,
alternative = "two.sided",
conf.level = .95,
correct = FALSE)
test1$statistic
test1$estimate
test1$conf.int
test2 <- prop.test(x= 334,
n = 1005,
p = .4,
alternative = "less",
conf.level = .95,
correct = FALSE)
test2
prop.test(x= 334,
n = 1005,
p = .4,
alternative = "greater",
conf.level = .95,
correct = FALSE)
prop.test(x= 334,
n = 1005,
p = .4,
alternative = "two.sided",
conf.level = .95,
correct = FALSE)
prop.test(x= 334,
n = 1005,
p = .4,
alternative = "two.sided",
conf.level = .95,
correct = FALSE)
library(openintro)
library(tidyverse)
glimpse(cancer_in_dogs)
head(cancer_in_dogs, n = 4)
slice(cancer_in_dogs, n = 4)
?slice
slice_sample(cancer_in_dogs, n = 4)
table(cancer_in_dogs)
foo <- table(cancer_in_dogs)
foo[1]
foo
foo[2]
foo[1,]
foo[,1]
sumTab <- table(cancer_in_dogs)
sumTab
sumTab <- table(cancer_in_dogs$order, cancer_in_dogs$response)
sumTab
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab %>% kable()
library(knitr)
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab %>% kable()
sumTab
pHat1 <- sumTab[1,1] / sum(sumTab[,1])
pHat2 <- sumTab[1,2] / sum(sumTab[,2])
c(pHat1, pHat2)
pDiff <- pHat1 - pHat2
pDiff
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab %>% kable()
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
n1 <- sum(sumTab[,1])
n2 <- sum(sumTab[,2])
pHat1 <- sumTab[1,1] / n1
pHat2 <- sumTab[1,2] / n2
c(pHat1, pHat2)
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
SE
pDiff + c(-1, 1)*zCrit*SE
prop.test( x = sumTab[1,], n = c(n1,n2))
prop.test( x = sumTab[1,], n = c(n1,n2), correct = F)
bookdown::render_book()
sumTab %>% kable()
library(knitr)
library(tidyverse)
library(tidyverse)
library(openintro)
library(infer)
set.seed(1187)
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
pHat
# Take sample
sample2 <- sample( gss2010$degree, size = 2044, replace = TRUE)
#Find proportion of high school dropouts
pHat2 <- sum(sample2 == "LT HIGH SCHOOL") / length(sample2)
pHat2
simulated_sampling_distr <- gss2010 %>%
rep_sample_n(size = 2044, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(simulated_sampling_distr)
ggplot(simulated_sampling_distr, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 2044",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
#average sample proportion
mean(simulated_sampling_distr$p_hat)
sd(simulated_sampling_distr$p_hat)
sampling_dist2 <- gss2010 %>%
rep_sample_n(size = 100, reps = 5000, replace = TRUE) %>%
mutate( degree = if_else(degree == "LT HIGH SCHOOL", "LT HIGH SCHOOL", "other")) %>%
count(degree) %>%
mutate(p_hat = n / sum(n)) %>%
filter( degree == "LT HIGH SCHOOL")
head(sampling_dist2)
ggplot(sampling_dist2, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
labs(title = "Distribution of sample proportions, n = 100",
subtitle = "Estimating SE for 2010 proportion of Americans without a HS diploma",
x = "Sample proportion, p-hat")
mean(sampling_dist2$p_hat)
sd(sampling_dist2$p_hat)
pHat
SE <- sd(simulated_sampling_distr$p_hat)
SE
CI <- pHat + c(-1,1)*2*SE
CI
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
# generates results from 5000 binomial experiments w/ probability of
# success = .1 and sample size of n = 2044, returns sample proportion.
null_dist <- tibble(p_hat = rbinom(5000, 2044, .1)/2044)
# center of distribution
mean(null_dist$p_hat)
# standard error
SE <- sd(null_dist$p_hat)
SE
ggplot(null_dist, aes(x = p_hat)) +
geom_histogram(bins = 15, color = "black", fill = "steelblue") +
geom_vline(xintercept = pHat, color = "red") +
labs(title = "Null distribution with p = .1 and n = 2044, pHat = .149",
x = "Sample proportion, p-hat")
# count the number of simulated samples with proportions at least as large as
# our actual sample proportion, divide by number of samples in simulated dist.
pValue <- sum(null_dist$p_hat >= pHat ) / length(null_dist$p_hat)
pValue
ggplot(data.frame(x = c(-3,3)), aes(x = x)) +
stat_function(fun = dnorm,
geom = "line") +
stat_function(fun = dnorm,
geom = "area",
fill = "steelblue",
xlim = c(-1.96, 1.96))+
labs(title = "What bounds give us a central area of .95?",
x = "Z", y = "")
qnorm(.025, lower.tail = FALSE)
cvTable <- tibble( conf.level = c(.9, .95, .98, .99),
crit.val = qnorm( (1 - conf.level)/2, lower.tail =F))
cvTable
# components of CI
pHat <- sum( gss2010$degree == "LT HIGH SCHOOL") / length(gss2010$degree)
SE <- sqrt(pHat*(1-pHat)/length(gss2010$degree))
zCrit <- qnorm( (1 - .95)/2, lower.tail = FALSE)
# CI
pHat + c(-1,1)*zCrit*SE
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .45))+
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of two-sided hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- 2*pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.55, .6)) +
labs(title = "P-value of one-sided upper hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE, lower.tail = F)
pVal
#set mean and sd of normal sampling dist.
args <- c(mean = .5, sd = sqrt(.5*.5/200))
#plotting
ggplot(data.frame(x = c(.4,.6)), aes(x = x)) +
stat_function(fun = dnorm,
args = args,
geom = "line") +
stat_function(fun = dnorm,
args = args,
geom = "area",
fill = "steelblue",
xlim = c(.4, .55)) +
labs(title = "P-value of one-sided lower hypothesis test",
subtitle = "null prop. = .5, p_hat = .55, n = 200",
x = "sample proprotion",
y = "")
pNull <- .5
SE <- sqrt(pNull*(1 - pNull)/200)
pHat <- .55
pVal <- pnorm(.55, mean = pNull, sd = SE)
pVal
n <- length(gss2010$degree)
n
pHat <- sum(gss2010$degree == "LT HIGH SCHOOL")/n
pHat
pNull <- .1
# will return a logical, T/F
n*pNull >= 10
n*(1 - pNull) >= 10
SE <- sqrt(pNull*(1- pNull)/n)
pValue <- pnorm(pHat, mean = pNull, sd = SE, lower.tail = F)
pValue
slice_sample(cancer_in_dogs, n = 4)
sumTab <- table(cancer_in_dogs$response, cancer_in_dogs$order)
sumTab %>% kable()
n1 <- sum(sumTab[,1])
n2 <- sum(sumTab[,2])
pHat1 <- sumTab[1,1] / n1
pHat2 <- sumTab[1,2] / n2
c(pHat1, pHat2)
pDiff <- pHat1 - pHat2
pDiff
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
SE
zCrit <- qnorm( (1-.95)/2, lower.tail = F)
ciDiff <- pDiff + c(-1, 1)*zCrit*SE
ciDiff
sumTab %>% kable()
pPool <- sum(sumTab[1,])/sum(sumTab)
pPool <- sum(sumTab[1,])/sum(sumTab)
pPool
c( n1*pPool, n1*(1-pPool))
c( n2*pPool, n2*(1-pPool))
SE <- sqrt( pPool*(1-pPool)/n1 + pPool*(1-pPool)/n2)
SE
SE <- sqrt(pHat1*(1- pHat1)/n1 +  pHat2*(1- pHat2)/n2)
SE
SE <- sqrt( pPool*(1-pPool)/n1 + pPool*(1-pPool)/n2)
SE
pDiff <- pHat1 - pHat2
pHat1 <- sumTab[1,1] / n1
pHat2 <- sumTab[1,2] / n2
pDiff <- pHat1 - pHat2
pDiff
Z <- pDiff / SE
Z
pVal <- 2*pnorm(Z,lower.tail = FALSE)
pVal
bookdown::render_book()
popular <- matrix( data = c( 63, 31, 25, 88, 55, 33, 96, 55, 32),
ncol = 3,
nrow = 3,
byrow = TRUE )
popular
expected <- matrix( rep(0, 9), nrow = 3, ncol = 3)
for(i in 1:3){
for(j in 1:3){
expected[i,j] <- sum(popular[i,])*sum(popular[,j])/sum(popular)
}
}
expected
popular
(popular - expected)^2/expected
test_stat <- sum((popular - expected)^2/expected)
test_stat
pchisq(test_stat, df = (3-1)*(3-1), lower.tail = F)
test_results <- chisq.test(x = popular,
correct = F)
test_results$statistic
summary(test_results)
test_results
test_results$observed
test_results$expected
test_results$expected - expected
library(openintro)
cancer_in_dogs
cars93
table(cars93$type, cars93$drive_train)
carSummary <- table(cars93$type, cars93$drive_train)
chisq.test(carSummary,
correct = F)
carSummary
?cancer_in_dogs
dogSum <- table(cancer_in_dogs$order, cancer_in_dogs$response)
dogSum
prop.table(dogSum)
191/sum(dogSum[1,])
300/941
chisq.test(dogSum, correct = FALSE)
qchisq(.05, df = 4, lower.tail = F)
library(openintro)
head(sp500_seq)
table(sp500_seq$race)
library(openintro)
library(tidyverse)
glimpse(smoking)
?smoking
table(smoking$marital_status, smoking$smoke)
table(smoking$smoke, smoking$marital_status)

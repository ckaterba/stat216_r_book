chisq.test(carSummary,
correct = F)
carSummary
?cancer_in_dogs
dogSum <- table(cancer_in_dogs$order, cancer_in_dogs$response)
dogSum
prop.table(dogSum)
191/sum(dogSum[1,])
300/941
chisq.test(dogSum, correct = FALSE)
qchisq(.05, df = 4, lower.tail = F)
library(openintro)
head(sp500_seq)
table(sp500_seq$race)
library(openintro)
library(tidyverse)
glimpse(smoking)
?smoking
table(smoking$marital_status, smoking$smoke)
table(smoking$smoke, smoking$marital_status)
library(tidyverse)
?geom_function
ggplot(tibble(x = c(0, 10)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5))
ggplot(tibble(x = c(0, 10)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
geom_function(fun = dchisq,
args = list(df = 5),
geom = "fill",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "fill",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
geom_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18))
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18))
?labs
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18),
color = "steelblue") +
labs( x = "chi-squared", y = "",
title = "Chi-squared distribution with df = 5",
subtitle = "p-value for chi-squared = 6.2 shaded")
ggplot(tibble(x = c(0, 18)), aes(x = x)) +
geom_function(fun = dchisq,
args = list(df = 5)) +
stat_function(fun = dchisq,
args = list(df = 5),
geom = "area",
xlim = c(6.2, 18),
fill = "steelblue") +
labs( x = "chi-squared", y = "",
title = "Chi-squared distribution with df = 5",
subtitle = "p-value for chi-squared = 6.2 shaded")
spTable <- table(sp500_seq$race)
library(openintro)
spTable <- table(sp500_seq$race)
spTable
?sp500_seq
?sp500
sp500 %>% view()
sp500_1950_2018 %>% view()
sp500_1950_2018 %>%
filter( date >= '1990-01-10' & date >= '2011-12-31') %>% view()
sp500_1950_2018 %>%
filter( Date >= '1990-01-10' & Date >= '2011-12-31') %>% view()
glimpse(sp500_1950_2018)
sp500_1950_2018 %>%
filter( Date >= '1990-01-10' & Date <= '2011-12-31') %>% view()
sp500_1950_2018 %>%
filter( Date >= '1990' & Date <= '2012') %>% view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>% view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE))
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%x
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
view()
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' & as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
summarize( upProp = sum(dir)/length(dir))
sp500_1950_2018 %>%
filter( as.character(Date) >= '1990' &
as.character(Date) <= '2012') %>%
mutate(dir = if_else( Close > Open, TRUE, FALSE)) %>%
summarize( upProb = sum(dir)/length(dir))
probs <- dgeom(0:5,.531)
probs
probs <- c( dgeom(0:5,.531), pgeom(5, .351))
sum(probs)
probs <- c( dgeom(0:5,.531), pgeom(5, .351, lower.tail = F))
sum(probs)
probs <- c( dgeom(0:5,.531), pgeom(5, .531, lower.tail = F))
probs
sum(probs)
sum(spTable)
# expected counts
expected <- n*probs
expected
t( tibble(days, probs, expected))) %>% kable()
t( tibble(days, probs, expected)) %>% kable()
library(knitr)
t( tibble(days, probs, expected)) %>% kable()
#list of factors
days <- c(1:6, "7+")
# total number of up-to-up runs
n <-sum(spTable)
#list of factors
days <- c(1:6, "7+")
#probability/proportion of each factor level
probs <- c( dgeom(0:5,.531), pgeom(5, .531, lower.tail = F))
# expected counts
expected <- n*probs
expected
t( tibble(days, probs, expected)) %>% kable()
# display all of the above in a horizontally organized table
t( tibble(days, round(probs, 3), round(expected, 3))) %>% kable()
# display all of the above in a horizontally organized table
t( tibble(days, probs = round(probs, 3), expected = round(expected, 3))) %>% kable()
spTable
spTable[,2]
spTable[2,]
dim(spTable)
spTable - expected
(spTable - expected)^2/expected
# each individual squared z-score
(spTable - expected)^2/expected
# test stat
chi.sq <- sum((spTable - expected)^2/expected)
chi.sq
pchisq(chi.sq, df = 6, lower.tail = FALSE)
# each individual squared z-score
(spTable - expected)^2/expected
# test stat
chi.sq <- sum((spTable - expected)^2/expected)
chi.sq
(spTable - expected)^2/expected
(spTable - expected)
(spTable - expected)/sqrt(expected)
(spTable - expected)/sqrt(expected)
(spTable - expected)/sqrt(expected)
spTable/sum(spTable)
probs
bookdown::render_book()
ggplot(bf, aes(x = k, y = prob)) +
geom_point(color = "black")
library(tidyverse)
ggplot(bf, aes(x = k, y = prob)) +
geom_point(color = "black")
glimpse(mtcars)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
p <- ggplot(data = mtcars, aes(x = disp, y = mpg)) +
geom_point()
p
observed
observed <- table(smoking$smoke, smoking$marital_status)
library(openintro)
library(tidyverse)
observed <- table(smoking$smoke, smoking$marital_status)
observed
n <- sum(observed)
row1 <- sum(observed[1,])
column1 <- sum(observed[,1])
c(n, row1, column1)
row1*column1/n
(observed[1,1]- exp11)^2/exp11
exp11 <- row1*column1/n
exp11
(observed[1,1]- exp11)^2/exp11
# define an matrix with the right dimensions of all zeroes
expected <- matrix( rep(0, prod(dim(observed))),
nrows = dim(observed)[1],
ncols = dim(observed)[2])
# define an matrix with the right dimensions of all zeroes
expected <- matrix( rep(0, prod(dim(observed))),
nrow = dim(observed)[1],
ncol = dim(observed)[2])
# define an matrix with the right dimensions of all zeroes
expected <- matrix( rep(0, prod(dim(observed))),
nrow = dim(observed)[1],
ncol = dim(observed)[2])
# iterate over all rows
for(i in 1:dim(observed)[1]){
#iterage over all columns
for(j in 1:dim(observed)[2]){
#update i,j-th entry with expected count
expected[i,j] <- sum(observed[i,])*sum(observed[,j])/sum(observed)
}
}
expected
(observed - expected)^2/expected
chisq.test(observed)
chi <- sum((observed - expected)^2/expected)
chi
(observed - expected)/expected
(observed - expected)/sqrt(expected)
(observed - expected)^2/expected
pchisq(chi, df = 4, lower.tail = F)
(observed - expected)/sqrt(expected)
glimpse(gss()
)
glimpse(gss_cat)
glimpse(gss)
glimpse(gss2010)
glimpse(gss)
openintro::blizzard_salary
?blizzard_salary
?dgamma
popPlot <- ggplot( data = as_tibble(x = c(0, 10)),
aes(x = x)) +
stat_function(dgamma
, args = list(shape = 2, rate = 2))
popPlot <- ggplot( data = as_tibble(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, rate = 2))
popPlot
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, rate = 2))
popPlot
, args = list(shape = 2) +
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2)) +
stat_function(fun = dnorm
, args = list(mean = 2)  )
popPlot
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2)) +
stat_function(fun = dnorm
, args = list(mean = 1)  )
popPlot
popPlot
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2)) +
stat_function(fun = dnorm
, args = list(mean = 1)
, color = "red")
popPlot
?dgamma
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
stat_function(fun = dnorm
, args = list(mean = 1)
, color = "red")
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8, 1000))
, color = "red")
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 1000))
, color = "red")
popPlot <- ggplot( data = data.frame(x = c(0, 10)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 500))
, color = "red")
popPlot
popPlot <- ggplot( data = data.frame(x = c(0, 7.5)),
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 500))
, color = "red")
popPlot
popPlot
popPlot + sampPlot
sampPlot <- ggplot(data = df, aes(x = x)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 500))
, color = "red")
popPlot + sampPlot
library(patchwork)
popPlot + sampPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2))
popPlot
df <- data.frame(x = c(0, 7.5))
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2))
sampPlot <- ggplot(data = df,
aes(x = x)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 500))
, color = "red")
popPlot
sampPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
)
popPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
) +
theme(panel.grid.minor=element_blank())
popPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
) +
theme(axis.text.x=element_blank())
popPlot
View(p2)
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
) +
theme(axis.text.x=element_blank()
, axis.ticks.x=element_blank()
, axis.text.y=element_blank()
, axis.ticks.y=element_blank())
popPlot
popPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
theme(axis.text.x=element_blank()
, axis.ticks.x=element_blank()
, axis.text.y=element_blank()
, axis.ticks.y=element_blank())
popPlot
View(p2)
View(popPlot)
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "40k"))
popPlot
sampPlot <- ggplot(data = df,
aes(x = x)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 100))
, color = "red") +
labs(
title = "Distribution of average sample income"
, subtitle = "n = 100"
, x = "Average annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "50k"))
sampPlot
popPlot
+
theme(axis.ticks.y = element_blank()
, axis.text.y = element_blank()
popPlot <- ggplot( data = df,
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "50k")) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
popPlot
bookdown::render_book()
bookdown::render_book()
library(tidyverse)
knitr::opts_chunk$set(echo = F)
df <- read_csv("writRawResults.csv", na = "NULL")
df <- read_csv("writRawResults.csv", na = "NULL")
view(df)
w095 <- df %>%
filter(!is.na(PreCoReq))
college <- df %>%
filter(!is.na(PreCoReq))
view(college)
w095 <- df %>%
filter(is.na(PreCoReq))
college <- df %>%
filter(is.na(PreCoReq))
unique(college$CourseID)
length(unique(college$StudentUID))
length(unique(w095$StudentUID))
w095 <- df %>%
filter(!is.na(PreCoReq))
length(unique(w095$StudentUID))
bookdown::render_book()
?women
mean(women$height)
n <- length(women$height)
xBar <- mean(women$height)
s <- sd(women$height)
SE <- s / sqrt(n)
#printing the calculated values
list(n = n, xBar = xBar, s = s, SE = SE)
#printing the calculated values
c(n = n, xBar = xBar, s = s, SE = SE)
t <- (xBar - 64.4)/SE
t
pVal <- pt(t, df = 15 - 1, lower.tail = F)
pVal <- pt(t, df = 15 - 1, lower.tail = F)
pVal
xBar
qnorm( (1 -. 90)/2 lower.tail = F)
qnorm( (1 -. 90)/2,  lower.tail = F)
qnorm( (1 - .90)/2,  lower.tail = F)
qnorm( (1 - .95)/2,  lower.tail = F)
qnorm( (1 - .99)/2,  lower.tail = F)
qnorm( (1 - .999)/2,  lower.tail = F)
qnorm( (1 - .9999)/2,  lower.tail = F)
qnorm( (1 - .99999999)/2,  lower.tail = F)
qnorm( (1 - .92)/2,  lower.tail = F)
SE <- sqrt(.57*(1 - .57)/1500)
SE
zCrit <- qnorm( (1 - .92)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit*SE
qnorm(.025, lower.tail = F)*sqrt(.5*.5/1500)
qnorm(.005, lower.tail = F)*sqrt(.5*.5/1500)
zCrit <- qnorm( (1 - .99)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit <- qnorm( (1 - .99999999999)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit <- qnorm( (1 - .9999999999999999999999999999999999)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE

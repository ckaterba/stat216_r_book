, x = ""
, y = ""
) +
theme(panel.grid.minor=element_blank())
popPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
) +
theme(axis.text.x=element_blank())
popPlot
View(p2)
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = ""
, y = ""
) +
theme(axis.text.x=element_blank()
, axis.ticks.x=element_blank()
, axis.text.y=element_blank()
, axis.ticks.y=element_blank())
popPlot
popPlot
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
theme(axis.text.x=element_blank()
, axis.ticks.x=element_blank()
, axis.text.y=element_blank()
, axis.ticks.y=element_blank())
popPlot
View(p2)
View(popPlot)
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "40k"))
popPlot
sampPlot <- ggplot(data = df,
aes(x = x)) +
stat_function(fun = dnorm
, args = list(mean = 4, sd = sqrt(8/ 100))
, color = "red") +
labs(
title = "Distribution of average sample income"
, subtitle = "n = 100"
, x = "Average annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "50k"))
sampPlot
popPlot
+
theme(axis.ticks.y = element_blank()
, axis.text.y = element_blank()
popPlot <- ggplot( data = df,
popPlot <- ggplot( data = df,
aes(x = x)) +
stat_function(fun = dgamma
, args = list(shape = 2, scale = 2)) +
labs(
title = "Income distribution of Flathead County Residents"
, x = "Annual income"
, y = "Density"
) +
scale_x_continuous(breaks = c(0, 4)
, labels = c("0", "50k")) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
popPlot
bookdown::render_book()
bookdown::render_book()
library(tidyverse)
knitr::opts_chunk$set(echo = F)
df <- read_csv("writRawResults.csv", na = "NULL")
df <- read_csv("writRawResults.csv", na = "NULL")
view(df)
w095 <- df %>%
filter(!is.na(PreCoReq))
college <- df %>%
filter(!is.na(PreCoReq))
view(college)
w095 <- df %>%
filter(is.na(PreCoReq))
college <- df %>%
filter(is.na(PreCoReq))
unique(college$CourseID)
length(unique(college$StudentUID))
length(unique(w095$StudentUID))
w095 <- df %>%
filter(!is.na(PreCoReq))
length(unique(w095$StudentUID))
bookdown::render_book()
?women
mean(women$height)
n <- length(women$height)
xBar <- mean(women$height)
s <- sd(women$height)
SE <- s / sqrt(n)
#printing the calculated values
list(n = n, xBar = xBar, s = s, SE = SE)
#printing the calculated values
c(n = n, xBar = xBar, s = s, SE = SE)
t <- (xBar - 64.4)/SE
t
pVal <- pt(t, df = 15 - 1, lower.tail = F)
pVal <- pt(t, df = 15 - 1, lower.tail = F)
pVal
xBar
qnorm( (1 -. 90)/2 lower.tail = F)
qnorm( (1 -. 90)/2,  lower.tail = F)
qnorm( (1 - .90)/2,  lower.tail = F)
qnorm( (1 - .95)/2,  lower.tail = F)
qnorm( (1 - .99)/2,  lower.tail = F)
qnorm( (1 - .999)/2,  lower.tail = F)
qnorm( (1 - .9999)/2,  lower.tail = F)
qnorm( (1 - .99999999)/2,  lower.tail = F)
qnorm( (1 - .92)/2,  lower.tail = F)
SE <- sqrt(.57*(1 - .57)/1500)
SE
zCrit <- qnorm( (1 - .92)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit*SE
qnorm(.025, lower.tail = F)*sqrt(.5*.5/1500)
qnorm(.005, lower.tail = F)*sqrt(.5*.5/1500)
zCrit <- qnorm( (1 - .99)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit <- qnorm( (1 - .99999999999)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
zCrit <- qnorm( (1 - .9999999999999999999999999999999999)/2,  lower.tail = F)
.57 + c(-1,1)*zCrit*SE
n <- length(faithful$waiting)
xBar <- mean(faithful$waiting)
s <- sd(faithful$waiting)
SE <- s / sqrt(n)
#printing the calculated values
c(n = n, xBar = xBar, s = s, SE = SE)
t
t <- (xBar - 75)/SE
t
pVal
pVal <- 2*pt(t, df = n-1)
pVal
pVal*100
library(tidyverse)
library(openintro)
val <- c(1,2,5,0)
prob <- c(3/12, 2/12, 1/12, 6/12)
exp_val <- sum(val*prob)
exp_val
varX <- sum(prob*(val - exp_val)^2)
varX
sdX <- sqrt(varX)
sdX
bf <- tibble(k = 0:15,
prob = dbinom(k, 15, .43))
ggplot(bf, aes(x = as.factor(k), y = prob)) +
geom_col(color = "black", fill = "steelblue") +
xlab("k") +
ylab("P(X=k)") +
labs(title = "Binomial Prob dist w/ p = .43 and n = 15")
dbinom(4, 15, .43)
pbinom(4, 15, .43)
pbinom(3, 15, .43, lower.tail= FALSE)
#or
1 - pbinom(3, 15, .43)
qbinom(.75, 15, .43)
pbinom(8, 15, .43)
gf <- tibble(k = 1:15,
prob = dgeom(k-1,.43))
ggplot(gf, aes(x = as.factor(k), y = prob)) +
geom_col(color = "black", fill = "steelblue") +
xlab("k") +
ylab("P(X=k)") +
labs(title = "Geometric Prob. dist. w/ p = .43 for k = 1 to 15")
dgeom(5, .43)
# or
(1-.43)^5*.43
pgeom(5, .43)
pgeom(4, .43, lower.tail = FALSE) # 1 - P(X <= 5) = P(X >5) = P(X >=6)
# or
1 - (dgeom(0, .43) + dgeom(1, .43) + dgeom(2, .43) + dgeom(3, .43)
+ dgeom(4, .43))
qgeom(.75, .43)
pgeom(2, .43)
ggplot( tibble( x = c(-3,3)),
aes(x = x)) +
stat_function(fun = dnorm) +
xlab("Z") +
ylab("") +
labs(title = "Prob. Density Fun. of Std. Normal Dist.")
maleBdim <- bdims %>%
filter(sex == 1)
ggplot(maleBdim, aes(x = hgt)) +
geom_histogram(bins = 14,
color = "black",
fill = "steelblue") +
labs(x = "height (cm)",
title = "Height of active men")
m <- mean(maleBdim$hgt)
s <- sd(maleBdim$hgt)
c(m, s)
ggplot(maleBdim, aes(x = hgt)) +
# scales y-axis to a probability density
geom_histogram(aes(y = ..density..),
bins = 14,
color = "black",
fill = "steelblue") +
# adds our normal curve
stat_function(fun = dnorm,
args = list(mean = m,
sd = s),
color = "red") +
labs(x = "height (cm)",
title = "Height of active men")
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(155, 185), #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H <= 185)")
pnorm(185, mean = m, sd = s)
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(175, 200),  #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(H >= 175)")
pnorm(175, mean = m, sd = s, lower.tail = FALSE)
ggplot(tibble(height = c(155,200)),
aes(x = height)) +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "area",
xlim = c(165, 175),  #define fill region
fill = "steelblue") +
stat_function(
fun = dnorm,
args = list(mean = m,
sd = s),
geom = "line",
color = "black") +
labs(x = "height (cm)", y = "density",
title = "Height of active men, P(165 <= H <= 175)")
pnorm(175, mean = m, sd = s) - pnorm(165, mean = m, sd = s)
qnorm(.8, mean = m, sd = s)
pnorm(183.7912, mean = m, sd = s)
ggplot(data.frame(x = c(-3,3)), aes(x = x)) +
stat_function(fun = dnorm, geom = "line",
aes(color = "a: normal"),
show.legend = T) +
stat_function(fun = dt,args = c(df = 1), geom = "line",
aes(color = "b: df = 1" ), alpha = 1,
show.legend = T) +
stat_function(fun = dt,args = c(df = 2), geom = "line",
aes(color = "c: df = 2" ), alpha = 1/2,
show.legend = T) +
stat_function(fun = dt,args = c(df = 4), geom = "line",
aes(color = "d: df = 4"), alpha = 1/4,
show.legend = T) +
stat_function(fun = dt,args = c(df = 8), geom = "line",
aes(color = "e: df = 8"), alpha = 1/8,
show.legend = T) +
stat_function(fun = dt,args = c(df = 16), geom = "line",
aes(color = "f: df = 16"), alpha = 1/16,
show.legend = T) +
stat_function(fun = dt,args = c(df = 32), geom = "line",
aes(color = "g: df = 32"), alpha = 1/32,
show.legend = T) +
stat_function(fun = dt,args = c(df = 64), geom = "line",
aes(color = "h: df = 64"), alpha = 1/64,
show.legend = T) +
scale_color_manual(values = c("steelblue", rep("black", 7))) +
labs(x = "t", y = "density", title = "t-distributions with varying degrees of freedom")
pt(-2, df = 10)
pnorm(-2)
pt(1, df = 16 ) - pt(-1, df = 16)
pnorm(1) - pnorm(-1)
ggplot(tibble('T' = c(-2,2))
, aes(x = 'T')) +
stat_function( fun = dt
, args = c(df = 10))
ggplot(tibble(t= c(-2,2))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 10))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 10)) +
stat_function(fun = dt
, args = c(df = 10)
, geom = 'area'
, color = 'steelblue'
, xlim = c(-3, -2))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 10)) +
stat_function(fun = dt
, args = c(df = 10)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-3, -2))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)) +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, -1))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)) +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, -1))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)) +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, 1))
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)) +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, 1)) +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)) +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)
, geom = 'area'
, fill = 'red'
, xlim = c(-1,1)
, alpha = .5)
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)) +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, 1)) +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)) +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)
, geom = 'area'
, fill = 'red'
, xlim = c(-1,1)
, alpha = .25)
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 16)
, color = 'steelblue') +
stat_function(fun = dt
, args = c(df = 16)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-1, 1)) +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)
, color = 'red') +
stat_function(fun = dnorm
, args = c(mean = 0, sd = 1)
, geom = 'area'
, fill = 'red'
, xlim = c(-1,1)
, alpha = .25)
qt(.9, df = 6)
qnorm(.9)
qt(.025, df = 11)
qt(.025, df = 11, lower.tail = F)
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 11)
, color = 'steelblue') +
stat_function(fun = dt
, args = c(df = 11)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-2.200985, 2.200985)) +
labs(main = 'Central area of .95 in a t-distribution with df = 11')
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 11)
, color = 'steelblue') +
stat_function(fun = dt
, args = c(df = 11)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-2.200985, 2.200985)) +
labs('Central area of .95 in a t-distribution with df = 11')
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 11)
) +
stat_function(fun = dt
, args = c(df = 11)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-2.200985, 2.200985)) +
labs('Central area of .95 in a t-distribution with df = 11')
?labs
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 11)
) +
stat_function(fun = dt
, args = c(df = 11)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-2.200985, 2.200985)) +
labs(title = 'Central area of .95 in a t-distribution with df = 11')
ggplot(tibble(t= c(-3,3))
, aes(x = t)) +
stat_function( fun = dt
, args = c(df = 11)
) +
stat_function(fun = dt
, args = c(df = 11)
, geom = 'area'
, fill = 'steelblue'
, xlim = c(-2.200985, 2.200985)) +
labs(title = 'Central area of .95 in a t-distribution with df = 11')
qt(.025, df = 11, lower.tail = FALSE)
tStar <- qt(.025, df = 11, lower.tail = F)
pt(tStar, df = 11) - pt(-tStar, df = 11)
bookdown::render_book()
library(openintro)
?openintro
ucla_textbooks_f18
view(ucla_textbooks_f18)
library(tidyverse)
view(ucla_textbooks_f18)
ucla_textbooks_f18 %>%
select(course, bookstore_new, amazon_new) %>%
head()
bookdown::render_book()
bookdown::render_book()
s = 4.25
SE <- s/sqrt(33)
s
SE
(31.57- 32)/SE
6+4+3+1+3+4.5+6
